#include "closure.hpp"

namespace taskloaf {

<%
n_any_sizes = 8
%>
static_assert(n_any_sizes == TL_N_ANY_SIZES, "Incorrect number of instantiations");
% for I1 in range(n_any_sizes):
% for I2 in range(n_any_sizes):
% for I3 in range(n_any_sizes):
% for I4 in range(n_any_sizes):
% for TC1 in ["true", "false"]:
% for TC2 in ["true", "false"]:
% for TC3 in ["true", "false"]:
% for TC4 in ["true", "false"]:
template struct closure<
    sized_any<size_ranges[${I1}],${TC1}>,
    sized_any<size_ranges[${I2}],${TC2}>,
    sized_any<size_ranges[${I3}],${TC3}>,
    sized_any<size_ranges[${I4}],${TC4}>
>;
% endfor
% endfor
% endfor
% endfor
% endfor
% endfor
% endfor
% endfor

} //end namespace taskloaf 
